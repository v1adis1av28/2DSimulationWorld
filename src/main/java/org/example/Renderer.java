package org.example;

import org.example.Creatures.Herbivore;
import org.example.Creatures.Predator;
import org.example.Resources.Grass;
import org.example.Resources.Rock;
import org.example.Resources.Tree;

import java.util.Map;
import java.util.Objects;

public class Renderer {
    private World world;
    public World getWorld()
    {
        return world;
    }
    public Renderer()
    {
        this.world = new World();
    }
    public void RenderWorld()
    {
        /*world = getWorld();
        Map<Coordinates,Entity> map = world.getMap();
        //–ú–µ—Ç–æ–¥ –¥–æ–ª–∂–µ–Ω –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø–æ –∑–Ω–∞—á–µ–Ω–∏—è–º m,n –∏ –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
        for(int i = 0;i<world.getN();i++)
        {
            for(int j = 0;j<world.getM();j++)
            {
                Coordinates coord = new Coordinates(i,j);
                Entity obj = getWorld().GetValue(coord);
                    if(obj instanceof Predator)
                    {
                        System.out.print("ü¶ñ ");
                    }
                    else if (obj instanceof Herbivore)
                    {
                        System.out.print("üê∞ ");
                    }
                    else if(obj instanceof Rock)
                    {
                        System.out.print("üèîÔ∏è ");
                    }
                    else if(obj instanceof Grass)
                    {
                        System.out.print("üåæ ");
                    }
                    else if(obj instanceof Tree)
                    {
                        System.out.print("üå≤ ");
                    }
                    else
                    {
                        System.out.print("* ");
                    }
                }
            System.out.println();
            }
    */
        //Obj –ø–æ—Å—Ç–æ—è–Ω–Ω–æ null –ø–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω –Ω–∞—Å–ª–µ–¥—É–µ—Ç—Å—è –æ—Ç entity –∏ –æ–Ω –ø—Ä–∏–≤–æ–¥–∏—Ç —Ç–∏–ø –∫ —ç–Ω–∏—Ç–∏—Ç
        //–ù–∞–¥–æ —Å–¥–µ–ª–∞—Ç—å –≤—Å–µ–º –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∏—Ö —Ç–∏–ø–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∑–¥–µ—Å—å —É–∂–µ –µ–≥–æ –≤—ã—Ç—è–≥–∏–≤–∞—Ç—å
        //–ü–µ—Ä–µ–≥—Ä—É–∑–∏—Ç—å –º–µ—Ç–æ–¥ GetValue()
        }
    }

